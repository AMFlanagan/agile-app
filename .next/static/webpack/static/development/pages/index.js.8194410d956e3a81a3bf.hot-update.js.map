{"version":3,"file":"static/webpack/static/development/pages/index.js.8194410d956e3a81a3bf.hot-update.js","sources":["webpack:///./src/components/OuterForm.js","webpack:///./src/reducers/reducers.js"],"sourcesContent":["import { Fragment } from 'react';\nimport { getTickets } from '../reducers/reducers';\nimport { connect } from 'react-redux';\nimport Input from './Input';\nimport { addTicket, delTicket } from '../actions/estimationActions';\n\nconst OuterForm = ({ tickets, dispatch }) => {\n    return (\n        <Fragment>\n            <div>\n                <h2>Input</h2>\n                <div>\n                    {tickets}\n                </div>\n                <button className=\"btn btn-primary\" onClick={() => dispatch(delTicket(this.props.tickets.length - 1))}>-</button>\n                <button className=\"btn btn-primary\" onClick={() => dispatch(addTicket(<Input key={this.props.tickets.length}/>))}>+</button>\n            </div>\n            <div>\n                <input onChange={(e) => this.handleChangeSinglePost(e.target.value, e.target.id)} id=\"average-cyle-velocity\" type=\"number\" name=\"average-cyle-velocity\" placeholder=\"Average cycle velocity\"></input>\n                <input onChange={(e) => this.handleChangeSinglePost(e.target.value, e.target.id)} id=\"average-Weekly-Initiative-CoS-velocity\" type=\"number\" name=\"average-Weekly-Initiative-CoS-velocity\" placeholder=\"Average cyle velocity\"></input>\n                <p>Average Weekly Velocity {this.state.averageWeeklyVelocity}</p>\n            </div>\n        </Fragment>\n    );\n}\n\n// class OuterForm extends Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             inputs: this.props.tickets,\n//             averageWeeklyVelocity: null\n//         };\n//     }\n\n//     handleChangeSinglePost(value, id) {\n//         switch (id) {\n//             case 'average-cyle-velocity':\n//                 this.setState({\n//                     averageWeeklyVelocity: (value / 2)\n//                 });\n//         }\n//     }\n\n//     addInput() {\n//         this.props.dispatch(addTicket(<Input key={this.props.tickets.length}/>));\n//     }\n\n//     delInput() {\n//         this.props.dispatch(delTicket(this.props.tickets.length - 1));\n//     }\n\n//     render() {\n//         return (\n//             <Fragment>\n//                 <div>\n//                     <h2>Input</h2>\n//                     <div>\n//                         {this.props.tickets}\n//                     </div>\n//                     <button className=\"btn btn-primary\" onClick={() => this.delInput()}>-</button>\n//                     <button className=\"btn btn-primary\" onClick={() => this.addInput()}>+</button>\n//                 </div>\n//                 <div>\n//                     <input onChange={(e) => this.handleChangeSinglePost(e.target.value, e.target.id)} id=\"average-cyle-velocity\" type=\"number\" name=\"average-cyle-velocity\" placeholder=\"Average cycle velocity\"></input>\n//                     <input onChange={(e) => this.handleChangeSinglePost(e.target.value, e.target.id)} id=\"average-Weekly-Initiative-CoS-velocity\" type=\"number\" name=\"average-Weekly-Initiative-CoS-velocity\" placeholder=\"Average cyle velocity\"></input>\n//                     <p>Average Weekly Velocity {this.state.averageWeeklyVelocity}</p>\n//                 </div>\n//             </Fragment>\n//         );\n//     }\n// }\n\nconst mapStateToProps = state => ({\n    tickets: getTickets(state)\n});\n\nexport default connect(\n    mapStateToProps,\n)(OuterForm);\n","import { combineReducers } from 'redux';\nimport { ADD_TICKET, DEL_TICKET } from '../actions/actionTypes';\nimport Input from '../components/Input';\n\nconst initialState = {\n    tickets: [<Input key={0} />]\n};\n\nfunction tickets(state = initialState.tickets, action) {\n    switch (action.type) {\n        case ADD_TICKET:\n            return [\n                ...state,\n                action.ticket\n            ];\n        case DEL_TICKET:\n            return [\n                ...state.slice(0, action.index),\n                ...state.slice(action.index + 1)\n            ];\n        // case\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    tickets,\n});\n\nexport const getTickets = (state) => {\n    return state.tickets;\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AAIA;AACA;AAAA;AACA;AAbA;AAeA;AACA;AACA;AACA;AADA;AAIA;AACA;AACA;;;;A","sourceRoot":""}